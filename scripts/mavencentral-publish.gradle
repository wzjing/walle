apply plugin: "maven-publish"
apply plugin: "signing"

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId GROUP_NAME
            artifactId project.name
            version VERSION_NAME
            from components.java
            artifact sourceJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()

                // eliminate test-scoped dependencies (no need in maven central POMs)
                root.dependencies.removeAll { dep ->
                    dep.scope == "test"
                }

                // add all items necessary for maven central publication
                root.children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST

                    description 'Custom MeiTuan walle channel util'
                    name 'Custom Walle'
                    url 'https://github.com/mautini/schemaorg-java'
                    organization {
                        name 'io.github.wzjing'
                        url 'https://io.github.wzjing/projects/walle'
                    }
                    issueManagement {
                        system 'GitHub'
                        url 'https://github.com/wzjing/walle/issues'
                    }
                    licenses {
                        license {
                            name 'Apache License 2.0'
                            url 'https://github.com/wzjing/walle/blob/master/LICENSE'
                            distribution 'repo'
                        }
                    }
                    scm {
                        url 'https://github.com/wzjing/walle'
                        connection 'scm:git:git://github.com/wzjing/walle'
                        developerConnection 'scm:git:ssh://git@github.com:wzjing/walle.git'
                    }
                    developers {
                        developer {
                            name 'wzjing'
                        }
                    }
                }
            }
        }

    }

    repositories {

        maven {
            if (VERSION_NAME.toUpperCase().endsWith("SNAPSHOT"))  {
                url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            } else {
                url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username gradle.ext.sonatypeUsername
                password gradle.ext.sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications
}